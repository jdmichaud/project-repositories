<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN""http://www.w3.org/TR/REC-html40/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc on Fri Jun 28 21:16:19 MEST 2002 -->
<TITLE>
Index ()
</TITLE>
<LINK REL ="stylesheet" TYPE="text/css" HREF="stylesheet.css" TITLE="Style">
</HEAD>
<SCRIPT>
function asd()
{
parent.document.title="Index ()";
}
</SCRIPT>
<BODY BGCOLOR="white" onload="asd();">

<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_top"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_H_">H</A> <A HREF="#_I_">I</A> <A HREF="#_J_">J</A> <A HREF="#_L_">L</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_P_">P</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_W_">W</A> <A HREF="#___">_</A> <HR>
<A NAME="_A_"><!-- --></A><H2>
<B>A</B></H2>
<DL>
<DT><A HREF="THit.html#addCase(TCase)"><B>addCase(TCase)</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="THit.html#addCase(java.util.Vector)"><B>addCase(Vector)</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TDefaultHistory.html#addHit(THit)"><B>addHit(THit)</B></A> - 
Method in class <A HREF="TDefaultHistory.html">TDefaultHistory</A>
<DD>&nbsp;
<DT><A HREF="THistory.html#addHit(THit)"><B>addHit(THit)</B></A> - 
Method in class <A HREF="THistory.html">THistory</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#addObserver(TNetServerThread)"><B>addObserver(TNetServerThread)</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Add a observer number to the TSet
<DT><A HREF="TNetServer.html#addObserver(TNetServerThread, int)"><B>addObserver(TNetServerThread, int)</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>Add an observer to the game
<DT><A HREF="TSet.html#addPlayer(TNetServerThread)"><B>addPlayer(TNetServerThread)</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Add a player number to the TSet
</DL>
<HR>
<A NAME="_B_"><!-- --></A><H2>
<B>B</B></H2>
<DL>
<DT><A HREF="DBQueryFactory.html#buildTableCreationCommand(java.lang.String, java.util.Vector)"><B>buildTableCreationCommand(String, Vector)</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#buildTableCreationCommand(java.lang.String, java.util.Vector)"><B>buildTableCreationCommand(String, Vector)</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>create a table creation query.
<DT><A HREF="DBQueryFactory.html#buildTablePrintCommand()"><B>buildTablePrintCommand()</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#buildTablePrintCommand()"><B>buildTablePrintCommand()</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>create a table print query.
<DT><A HREF="DBQueryFactory.html#buildTupleFinderCommand(java.util.Vector, java.util.Vector)"><B>buildTupleFinderCommand(Vector, Vector)</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#buildTupleFinderCommand(java.util.Vector, java.util.Vector)"><B>buildTupleFinderCommand(Vector, Vector)</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>create a select tuples query.
<DT><A HREF="DBQueryFactory.html#buildTupleInsertionCommand(java.lang.String, java.util.Vector)"><B>buildTupleInsertionCommand(String, Vector)</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#buildTupleInsertionCommand(java.lang.String, java.util.Vector)"><B>buildTupleInsertionCommand(String, Vector)</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>create a tuple insetion query.
<DT><A HREF="DBQueryFactory.html#buildTupleUpdateCommand(java.lang.String, java.util.Vector)"><B>buildTupleUpdateCommand(String, Vector)</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#buildTupleUpdateCommand(java.lang.String, java.util.Vector)"><B>buildTupleUpdateCommand(String, Vector)</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>create a update tuples query.
<DT><A HREF="TNet.html#bye()"><B>bye()</B></A> - 
Method in class <A HREF="TNet.html">TNet</A>
<DD>Close the connetion
</DL>
<HR>
<A NAME="_C_"><!-- --></A><H2>
<B>C</B></H2>
<DL>
<DT><A HREF="TNet.html#close()"><B>close()</B></A> - 
Method in class <A HREF="TNet.html">TNet</A>
<DD>Close the socket
<DT><A HREF="TCase.html#compareTo(TCase)"><B>compareTo(TCase)</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>to know if 2 cells are similar
<DT><A HREF="THexagonCase.html#compareTo(TCase)"><B>compareTo(TCase)</B></A> - 
Method in class <A HREF="THexagonCase.html">THexagonCase</A>
<DD>to know if the cell is similar from another hexagon cell
<DT><A HREF="THit.html#compareTo(THit)"><B>compareTo(THit)</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="THit.html#compute()"><B>compute()</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TNetServer.html#create()"><B>create()</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>Wait for client connection
<DT><A HREF="TBoard.html#createCase(int)"><B>createCase(int)</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>create the cell associated with the selected board
<DT><A HREF="THexagonBoard.html#createCase(int)"><B>createCase(int)</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>&nbsp;
<DT><A HREF="TNetServer.html#createGame(TNetServerThread, java.lang.String)"><B>createGame(TNetServerThread, String)</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>Create a game on the server
<DT><A HREF="THexagonQueensFactory.html#createPion(TBoard, TPlayer, TCase)"><B>createPion(TBoard, TPlayer, TCase)</B></A> - 
Method in class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_D_"><!-- --></A><H2>
<B>D</B></H2>
<DL>
<DT><A HREF="DBQuery.html"><B>DBQuery</B></A> - interface <A HREF="DBQuery.html">DBQuery</A>.<DD>A DBQuery is an abstract represation of a creation query, 
 insertionquery, update query...<DT><A HREF="DBQueryFactory.html"><B>DBQueryFactory</B></A> - class <A HREF="DBQueryFactory.html">DBQueryFactory</A>.<DD>The DBQueryFactory is an abstract class.<DT><A HREF="DBQueryFactory.html#DBQueryFactory()"><B>DBQueryFactory()</B></A> - 
Constructor for class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="DBQueryPerformer.html"><B>DBQueryPerformer</B></A> - class <A HREF="DBQueryPerformer.html">DBQueryPerformer</A>.<DD>The DBQueryPerfomer executes the queries.<DT><A HREF="DBQueryPerformer.html#DBQueryPerformer()"><B>DBQueryPerformer()</B></A> - 
Constructor for class <A HREF="DBQueryPerformer.html">DBQueryPerformer</A>
<DD>&nbsp;
<DT><A HREF="DBQueryPerformerLoader.html"><B>DBQueryPerformerLoader</B></A> - class <A HREF="DBQueryPerformerLoader.html">DBQueryPerformerLoader</A>.<DD>The DBQueryPerformerLoader will instanciate a DBQueryPerformer daughter 
 class.<DT><A HREF="DBQueryPerformerLoader.html#DBQueryPerformerLoader()"><B>DBQueryPerformerLoader()</B></A> - 
Constructor for class <A HREF="DBQueryPerformerLoader.html">DBQueryPerformerLoader</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensFactory.html#decodeHit(java.lang.String)"><B>decodeHit(String)</B></A> - 
Method in class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
<DT><A HREF="TDrawable.html#display(java.awt.Graphics2D)"><B>display(Graphics2D)</B></A> - 
Method in interface <A HREF="TDrawable.html">TDrawable</A>
<DD>the display function
<DT><A HREF="TEntity.html#display(java.awt.Graphics2D)"><B>display(Graphics2D)</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>displays the entity
<DT><A HREF="THexagonBoard.html#display(java.awt.Graphics2D)"><B>display(Graphics2D)</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>draw the board's cells
<DT><A HREF="THexagonCase.html#display(java.awt.Graphics2D)"><B>display(Graphics2D)</B></A> - 
Method in class <A HREF="THexagonCase.html">THexagonCase</A>
<DD>display the cell in the current frame according to its graphic context
<DT><A HREF="TPion.html#display(java.awt.Graphics2D)"><B>display(Graphics2D)</B></A> - 
Method in class <A HREF="TPion.html">TPion</A>
<DD>displays a pion
<DT><A HREF="TPlayer.html#display(java.awt.Graphics2D)"><B>display(Graphics2D)</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>the display function
<DT><A HREF="TBoard.html#displayText()"><B>displayText()</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>&nbsp;
<DT><A HREF="THexagonBoard.html#displayText()"><B>displayText()</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_E_"><!-- --></A><H2>
<B>E</B></H2>
<DL>
<DT><A HREF="TNetServerThread.html#elo(int)"><B>elo(int)</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Send the ELO player
<DT><A HREF="THexagonQueensFactory.html#encodeHit(THit)"><B>encodeHit(THit)</B></A> - 
Method in class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
<DT><A HREF="DBQueryPerformer.html#executeQuerySequence(DBQueryFactory, java.util.Vector)"><B>executeQuerySequence(DBQueryFactory, Vector)</B></A> - 
Method in class <A HREF="DBQueryPerformer.html">DBQueryPerformer</A>
<DD>&nbsp;
<DT><A HREF="JDBCPerformer.html#executeQuerySequence(DBQueryFactory, java.util.Vector)"><B>executeQuerySequence(DBQueryFactory, Vector)</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>The method executeQuerySequence calls in loop executeSingleQuery.
<DT><A HREF="DBQueryPerformer.html#executeSingleQuery(DBQueryFactory, DBQuery)"><B>executeSingleQuery(DBQueryFactory, DBQuery)</B></A> - 
Method in class <A HREF="DBQueryPerformer.html">DBQueryPerformer</A>
<DD>&nbsp;
<DT><A HREF="JDBCPerformer.html#executeSingleQuery(DBQueryFactory, DBQuery)"><B>executeSingleQuery(DBQueryFactory, DBQuery)</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>The method executeSinglQuery looks the type of the DBQuery it recieves 
 (in second argument) and then format, translate the DBQuery in a string 
 that contains the SQL trnaslation of the astract query.
</DL>
<HR>
<A NAME="_F_"><!-- --></A><H2>
<B>F</B></H2>
<DL>
<DT><A HREF="JDBCPerformer.html#formatDBQueryInCreationTable(DBQueryFactory, DBQuery)"><B>formatDBQueryInCreationTable(DBQueryFactory, DBQuery)</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>The method formatBQueryInCreationTable translate an abstract DBQuery 
 in a SQL creation table query.
<DT><A HREF="JDBCPerformer.html#formatDBQueryInTablePrint(DBQueryFactory, DBQuery)"><B>formatDBQueryInTablePrint(DBQueryFactory, DBQuery)</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>The method formatBQueryInTablePrint translate an abstract DBQuery 
 in a SQL print table query.
<DT><A HREF="JDBCPerformer.html#formatDBQueryInTupleFinder(DBQueryFactory, DBQuery)"><B>formatDBQueryInTupleFinder(DBQueryFactory, DBQuery)</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>The method formatBQueryInTupleFinder translate an abstract DBQuery 
 in a SQL select query.
<DT><A HREF="JDBCPerformer.html#formatDBQueryInTupleInsertion(DBQueryFactory, DBQuery)"><B>formatDBQueryInTupleInsertion(DBQueryFactory, DBQuery)</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>The method formatDBQueryInTupleInsertion translate an abstract DBQuery 
 in a SQL Insertion tuple query.
<DT><A HREF="JDBCPerformer.html#formatDBQueryInTupleUpdate(DBQueryFactory, DBQuery)"><B>formatDBQueryInTupleUpdate(DBQueryFactory, DBQuery)</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>The method formatDBQueryInTupleUpdate translate an abstract DBQuery 
 in a SQL update tuple query.
</DL>
<HR>
<A NAME="_G_"><!-- --></A><H2>
<B>G</B></H2>
<DL>
<DT><A HREF="TEntity.html#getActions(boolean)"><B>getActions(boolean)</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>return the actions possible for one specific entity :
 a pion can move and eat, a queen ca move through many cells
 this action are instanciated by the server rules
<DT><A HREF="TPion.html#getActions(boolean)"><B>getActions(boolean)</B></A> - 
Method in class <A HREF="TPion.html">TPion</A>
<DD>returns the two default actions for a pion : move and eat
<DT><A HREF="TCase.html#getBoard()"><B>getBoard()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#getBoard()"><B>getBoard()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensFactory.html#getBoard()"><B>getBoard()</B></A> - 
Method in class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
<DT><A HREF="THit.html#getBoard()"><B>getBoard()</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TEntity.html#getCase()"><B>getCase()</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>&nbsp;
<DT><A HREF="TBoard.html#getCase(int)"><B>getCase(int)</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>&nbsp;
<DT><A HREF="THit.html#getCase(int)"><B>getCase(int)</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TBoard.html#getCases()"><B>getCases()</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>&nbsp;
<DT><A HREF="TDistLocation.html#getCases(TBoard, TCase)"><B>getCases(TBoard, TCase)</B></A> - 
Method in class <A HREF="TDistLocation.html">TDistLocation</A>
<DD>returns a vector of cells that can be reached from a cell
<DT><A HREF="TLocation.html#getCases(TBoard, TCase)"><B>getCases(TBoard, TCase)</B></A> - 
Method in class <A HREF="TLocation.html">TLocation</A>
<DD>returns a vector of cells that can be reached from a cell
<DT><A HREF="TBoard.html#getCases(TCase, TLocation)"><B>getCases(TCase, TLocation)</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>return the list of cells that can be reached by another cell,
 and from a location
<DT><A HREF="TPlayer.html#getClientId()"><B>getClientId()</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TGraphicContext.html#getClr()"><B>getClr()</B></A> - 
Method in class <A HREF="TGraphicContext.html">TGraphicContext</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#getClr()"><B>getClr()</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TBoard.html#getColorCase(TCase)"><B>getColorCase(TCase)</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>return the color of a case in one board (alternative colors)
<DT><A HREF="THexagonBoard.html#getColorCase(TCase)"><B>getColorCase(TCase)</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>&nbsp;
<DT><A HREF="TAction.html#getCondition(int)"><B>getCondition(int)</B></A> - 
Method in class <A HREF="TAction.html">TAction</A>
<DD>&nbsp;
<DT><A HREF="TAction.html#getConditions()"><B>getConditions()</B></A> - 
Method in class <A HREF="TAction.html">TAction</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#getCounter()"><B>getCounter()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>&nbsp;
<DT><A HREF="TClientGame.html#getDC()"><B>getDC()</B></A> - 
Method in class <A HREF="TClientGame.html">TClientGame</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensRules.html#getFactory()"><B>getFactory()</B></A> - 
Method in class <A HREF="THexagonQueensRules.html">THexagonQueensRules</A>
<DD>return the name of the factory, and the informations that describes
 the functionment of this factory
<DT><A HREF="TRules.html#getFactory()"><B>getFactory()</B></A> - 
Method in class <A HREF="TRules.html">TRules</A>
<DD>return the name of the factory, and the informations that describes
 the functionment of this factory
<DT><A HREF="TBoard.html#getFocusedCase()"><B>getFocusedCase()</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>return the cell selected by the user
<DT><A HREF="TSet.html#getGame()"><B>getGame()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Get the game
<DT><A HREF="TPlayer.html#getGameId()"><B>getGameId()</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#getGameId()"><B>getGameId()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Return the game id
<DT><A HREF="TNetServer.html#getGames()"><B>getGames()</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>Games accessor
<DT><A HREF="TCase.html#getGC()"><B>getGC()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>&nbsp;
<DT><A HREF="TEntity.html#getGC()"><B>getGC()</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>&nbsp;
<DT><A HREF="TDefaultHistory.html#getHits()"><B>getHits()</B></A> - 
Method in class <A HREF="TDefaultHistory.html">TDefaultHistory</A>
<DD>&nbsp;
<DT><A HREF="THistory.html#getHits()"><B>getHits()</B></A> - 
Method in class <A HREF="THistory.html">THistory</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensRules.html#getHits(TBoard, TPlayer)"><B>getHits(TBoard, TPlayer)</B></A> - 
Method in class <A HREF="THexagonQueensRules.html">THexagonQueensRules</A>
<DD>Gives a list of hits of same priority that a player must play.
<DT><A HREF="TRules.html#getHits(TBoard, TPlayer)"><B>getHits(TBoard, TPlayer)</B></A> - 
Method in class <A HREF="TRules.html">TRules</A>
<DD>Gives a list of hits of same priority that a player must play.
<DT><A HREF="TCase.html#getHOffset()"><B>getHOffset()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>Return his x postion ...
<DT><A HREF="TBoard.html#getHOffset(TCase)"><B>getHOffset(TCase)</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>return the x position of a cell: the position of a cell
 depends on the other cells (board)
<DT><A HREF="THexagonBoard.html#getHOffset(TCase)"><B>getHOffset(TCase)</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#getId()"><B>getId()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TNetServerThread.html#getId()"><B>getId()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Get the id of the Thread
<DT><A HREF="TPlayer.html#getId()"><B>getId()</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TCase.html#getIndex()"><B>getIndex()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>&nbsp;
<DT><A HREF="TAction.html#getLocation(int)"><B>getLocation(int)</B></A> - 
Method in class <A HREF="TAction.html">TAction</A>
<DD>&nbsp;
<DT><A HREF="TAction.html#getLocations()"><B>getLocations()</B></A> - 
Method in class <A HREF="TAction.html">TAction</A>
<DD>&nbsp;
<DT><A HREF="DBQueryPerformer.html#getName()"><B>getName()</B></A> - 
Method in class <A HREF="DBQueryPerformer.html">DBQueryPerformer</A>
<DD>The method getName returns a string tahat contains the type of performer
 you are using.
<DT><A HREF="JDBCPerformer.html#getName()"><B>getName()</B></A> - 
Method in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>getName return a string that contains the type of the performer.
<DT><A HREF="TDBStandard.html#getName()"><B>getName()</B></A> - 
Method in class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>The method getName returns a string that contains the type of the TDB.
<DT><A HREF="TBoard.html#getNbCases()"><B>getNbCases()</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>&nbsp;
<DT><A HREF="THit.html#getNbCases()"><B>getNbCases()</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#getNbPlayers()"><B>getNbPlayers()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensFactory.html#getNbPlayers()"><B>getNbPlayers()</B></A> - 
Method in class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#getNick()"><B>getNick()</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#getObservers()"><B>getObservers()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Get the observers
<DT><A HREF="TSet.html#getObserversIterator()"><B>getObserversIterator()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Get an iterator on the vector of observer
<DT><A HREF="DBQueryFactory.html#getParams(DBQuery)"><B>getParams(DBQuery)</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#getParams(DBQuery)"><B>getParams(DBQuery)</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>returns the vector that contains the arguments that the query 
 manipulates.
<DT><A HREF="DBQueryPerformerLoader.html#getPerformer(java.lang.String, java.lang.String)"><B>getPerformer(String, String)</B></A> - 
Method in class <A HREF="DBQueryPerformerLoader.html">DBQueryPerformerLoader</A>
<DD>The getPerformer method needs two arguments to create a Performer.
<DT><A HREF="TCase.html#getPion()"><B>getPion()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#getPion(int)"><B>getPion(int)</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#getPions()"><B>getPions()</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TEntity.html#getPlayer()"><B>getPlayer()</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>&nbsp;
<DT><A HREF="THit.html#getPlayer()"><B>getPlayer()</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#getPlayer(int)"><B>getPlayer(int)</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>return a player thanks to his id
<DT><A HREF="TGame.html#getPlayerFromId(int)"><B>getPlayerFromId(int)</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>return a player thanks to his id
<DT><A HREF="TGame.html#getPlayers()"><B>getPlayers()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#getPlayers()"><B>getPlayers()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Get the players
<DT><A HREF="THexagonQueensFactory.html#getPlayers(TBoard)"><B>getPlayers(TBoard)</B></A> - 
Method in class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#getPlayersIterator()"><B>getPlayersIterator()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>Get an iterator on the vector of player
<DT><A HREF="THexagonQueensFactory.html#getPosPlayer()"><B>getPosPlayer()</B></A> - 
Method in class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
<DT><A HREF="TAction.html#getPossibleHits(TPlayer, TCase)"><B>getPossibleHits(TPlayer, TCase)</B></A> - 
Method in class <A HREF="TAction.html">TAction</A>
<DD>determines all the possible hits that a player can make from one cell
<DT><A HREF="TEat.html#getPossibleHits(TPlayer, TCase)"><B>getPossibleHits(TPlayer, TCase)</B></A> - 
Method in class <A HREF="TEat.html">TEat</A>
<DD>returns the hits corresponding to eat in the four directions
<DT><A HREF="DBQueryFactory.html#getQueryType(DBQuery)"><B>getQueryType(DBQuery)</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#getQueryType(DBQuery)"><B>getQueryType(DBQuery)</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>returns the type of the DBQuery.
<DT><A HREF="TGame.html#getRules()"><B>getRules()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#getScore()"><B>getScore()</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TNetServerThread.html#getServerGame()"><B>getServerGame()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#getServerGame()"><B>getServerGame()</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>&nbsp;
<DT><A HREF="DBQueryFactory.html#getTablesName(DBQuery)"><B>getTablesName(DBQuery)</B></A> - 
Method in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html#getTablesName(DBQuery)"><B>getTablesName(DBQuery)</B></A> - 
Method in class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>returns the vector that contains the name of the tables the query 
 manipulates.
<DT><A HREF="TCase.html#getVOffset()"><B>getVOffset()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>Return his y postion ...
<DT><A HREF="TBoard.html#getVOffset(TCase)"><B>getVOffset(TCase)</B></A> - 
Method in class <A HREF="TBoard.html">TBoard</A>
<DD>return the y position of a cell: the position of a cell
 depends on the other cells (board)
<DT><A HREF="THexagonBoard.html#getVOffset(TCase)"><B>getVOffset(TCase)</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>&nbsp;
<DT><A HREF="TNetServer.html#getWaitingGames()"><B>getWaitingGames()</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>Wainting_Games accessor
<DT><A HREF="TGraphicContext.html#getX()"><B>getX()</B></A> - 
Method in class <A HREF="TGraphicContext.html">TGraphicContext</A>
<DD>&nbsp;
<DT><A HREF="TGraphicContext.html#getY()"><B>getY()</B></A> - 
Method in class <A HREF="TGraphicContext.html">TGraphicContext</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_H_"><!-- --></A><H2>
<B>H</B></H2>
<DL>
<DT><A HREF="THexagonCase.html#hexSize"><B>hexSize</B></A> - 
Static variable in class <A HREF="THexagonCase.html">THexagonCase</A>
<DD>the size of one side of the hexagon
<DT><A HREF="TNetServerThread.html#hit(java.lang.String)"><B>hit(String)</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Send a hit to play
<DT><A HREF="TNetServer.html#hitBroadcast(java.lang.String, TNetServerThread)"><B>hitBroadcast(String, TNetServerThread)</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>Broadcast the hit to all client involved
<DT><A HREF="TPion.html#hSize"><B>hSize</B></A> - 
Static variable in class <A HREF="TPion.html">TPion</A>
<DD>the pion is represented by an ellipse of horizontal size
</DL>
<HR>
<A NAME="_I_"><!-- --></A><H2>
<B>I</B></H2>
<DL>
<DT><A HREF="TNetServerThread.html#id()"><B>id()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Send the id of the client
<DT><A HREF="TClientGame.html#initDisplay()"><B>initDisplay()</B></A> - 
Method in class <A HREF="TClientGame.html">TClientGame</A>
<DD>the initialization of the display
<DT><A HREF="TGame.html#initGame()"><B>initGame()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>create the game with the factory
<DT><A HREF="TGame.html#initRulesFactory(java.lang.String, java.util.Vector)"><B>initRulesFactory(String, Vector)</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>instanciate a factory thanks to a string describing the factory name
 and a vector of informations about the game rules
<DT><A HREF="TDBStandard.html#initTables()"><B>initTables()</B></A> - 
Method in class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>This method checks if the tables needed by the application exists on
 the database.
<DT><A HREF="TDisplayControler.html#initWindowDPY(int, int)"><B>initWindowDPY(int, int)</B></A> - 
Method in class <A HREF="TDisplayControler.html">TDisplayControler</A>
<DD>init the display
<DT><A HREF="TNetServerThread.html#interpret()"><B>interpret()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Interpret the Net messages
<DT><A HREF="THexagonQueensRules.html#isAllowed(TBoard, THit)"><B>isAllowed(TBoard, THit)</B></A> - 
Method in class <A HREF="THexagonQueensRules.html">THexagonQueensRules</A>
<DD>Determines whether a hit is allowed or not by the rules
<DT><A HREF="TRules.html#isAllowed(TBoard, THit)"><B>isAllowed(TBoard, THit)</B></A> - 
Method in class <A HREF="TRules.html">TRules</A>
<DD>Determines whether a hit is allowed or not by the rules
<DT><A HREF="TAction.html#isAllowed(THit)"><B>isAllowed(THit)</B></A> - 
Method in class <A HREF="TAction.html">TAction</A>
<DD>determines if this action can be reached with the giving hit
<DT><A HREF="THit.html#isCompleted()"><B>isCompleted()</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TCase.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>return whether the cell is empty or not
<DT><A HREF="TCase.html#isFocused()"><B>isFocused()</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>return whether the cell is focused or not
<DT><A HREF="TSet.html#isHere(int)"><B>isHere(int)</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#isHere(TNetServerThread)"><B>isHere(TNetServerThread)</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensRules.html#isPlayable(TBoard, THit)"><B>isPlayable(TBoard, THit)</B></A> - 
Method in class <A HREF="THexagonQueensRules.html">THexagonQueensRules</A>
<DD>Although a hit is allowed, the rules must determines if no others hits
 must be played instead.
<DT><A HREF="TRules.html#isPlayable(TBoard, THit)"><B>isPlayable(TBoard, THit)</B></A> - 
Method in class <A HREF="TRules.html">TRules</A>
<DD>Although a hit is allowed, the rules must determines if no others hits
 must be played instead.
</DL>
<HR>
<A NAME="_J_"><!-- --></A><H2>
<B>J</B></H2>
<DL>
<DT><A HREF="JDBCPerformer.html"><B>JDBCPerformer</B></A> - class <A HREF="JDBCPerformer.html">JDBCPerformer</A>.<DD>JDBCPerformer extends DBQuerPerfomer.<DT><A HREF="JDBCPerformer.html#JDBCPerformer(java.lang.String, java.lang.String)"><B>JDBCPerformer(String, String)</B></A> - 
Constructor for class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>When a JDBCPerfomer class is create, a conection to the database is 
 opened.
</DL>
<HR>
<A NAME="_L_"><!-- --></A><H2>
<B>L</B></H2>
<DL>
<DT><A HREF="TDBStandard.html#loadGame(int)"><B>loadGame(int)</B></A> - 
Method in class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>Find a game in the database from the gameId.
<DT><A HREF="TDBStandard.html#loadProfil(int)"><B>loadProfil(int)</B></A> - 
Method in class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>Find a player in the database from the playerId.
<DT><A HREF="TNetServerThread.html#lose()"><B>lose()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Inform the client that he lose the game
</DL>
<HR>
<A NAME="_M_"><!-- --></A><H2>
<B>M</B></H2>
<DL>
<DT><A HREF="TClientGame.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="TClientGame.html">TClientGame</A>
<DD>&nbsp;
<DT><A HREF="TNetServer.html#main(java.lang.String[])"><B>main(String[])</B></A> - 
Static method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_N_"><!-- --></A><H2>
<B>N</B></H2>
<DL>
<DT><A HREF="TNetServerThread.html#name()"><B>name()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Ask the client for the name of the player
<DT><A HREF="THexagonQueensRules.html#nbPlayer()"><B>nbPlayer()</B></A> - 
Method in class <A HREF="THexagonQueensRules.html">THexagonQueensRules</A>
<DD>&nbsp;
<DT><A HREF="TRules.html#nbPlayer()"><B>nbPlayer()</B></A> - 
Method in class <A HREF="TRules.html">TRules</A>
<DD>&nbsp;
<DT><A HREF="TDBStandard.html#newGameId()"><B>newGameId()</B></A> - 
Method in class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#NIY()"><B>NIY()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TNetServerThread.html#no()"><B>no()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Answer No
</DL>
<HR>
<A NAME="_O_"><!-- --></A><H2>
<B>O</B></H2>
<DL>
<DT><A HREF="TPion.html#offset"><B>offset</B></A> - 
Static variable in class <A HREF="TPion.html">TPion</A>
<DD>the offset to place the pion in a cell
<DT><A HREF="TNetServerThread.html#ok()"><B>ok()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Answer yes
<DT><A HREF="TDrawable.html#onMouseEvent(java.awt.event.MouseEvent)"><B>onMouseEvent(MouseEvent)</B></A> - 
Method in interface <A HREF="TDrawable.html">TDrawable</A>
<DD>the function that receives all the mouse events
<DT><A HREF="TEntity.html#onMouseEvent(java.awt.event.MouseEvent)"><B>onMouseEvent(MouseEvent)</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>receive the mouse events
<DT><A HREF="THexagonBoard.html#onMouseEvent(java.awt.event.MouseEvent)"><B>onMouseEvent(MouseEvent)</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>allow to know if a cell have been selected.
<DT><A HREF="THexagonCase.html#onMouseEvent(java.awt.event.MouseEvent)"><B>onMouseEvent(MouseEvent)</B></A> - 
Method in class <A HREF="THexagonCase.html">THexagonCase</A>
<DD>receives the mouse handlers to know if a cell is selected
<DT><A HREF="TPlayer.html#onMouseEvent(java.awt.event.MouseEvent)"><B>onMouseEvent(MouseEvent)</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>receives the mouse events
</DL>
<HR>
<A NAME="_P_"><!-- --></A><H2>
<B>P</B></H2>
<DL>
<DT><A HREF="TDisplayControler.html#paint(java.awt.Graphics)"><B>paint(Graphics)</B></A> - 
Method in class <A HREF="TDisplayControler.html">TDisplayControler</A>
<DD>method that is called when the frame have to be refreshed
<DT><A HREF="TDisplayControler.html#processMouseEvent(java.awt.event.MouseEvent)"><B>processMouseEvent(MouseEvent)</B></A> - 
Method in class <A HREF="TDisplayControler.html">TDisplayControler</A>
<DD>receives the mouse events
<DT><A HREF="TNet.html#protocolError()"><B>protocolError()</B></A> - 
Method in class <A HREF="TNet.html">TNet</A>
<DD>To recover from a protocole mistake
</DL>
<HR>
<A NAME="_R_"><!-- --></A><H2>
<B>R</B></H2>
<DL>
<DT><A HREF="TNet.html#receive()"><B>receive()</B></A> - 
Method in class <A HREF="TNet.html">TNet</A>
<DD>Receive a message
<DT><A HREF="TNetServerThread.html#register(int)"><B>register(int)</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Register the game to the server
<DT><A HREF="TNetServer.html#register(TNetServerThread, int)"><B>register(TNetServerThread, int)</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>Register a game
<DT><A HREF="TNetThread.html#run()"><B>run()</B></A> - 
Method in class <A HREF="TNetThread.html">TNetThread</A>
<DD>Run the thread
</DL>
<HR>
<A NAME="_S_"><!-- --></A><H2>
<B>S</B></H2>
<DL>
<DT><A HREF="TNetServer.html#save(TNetServerThread)"><B>save(TNetServerThread)</B></A> - 
Method in class <A HREF="TNetServer.html">TNetServer</A>
<DD>&nbsp;
<DT><A HREF="TDBStandard.html#saveGame(TGame)"><B>saveGame(TGame)</B></A> - 
Method in class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>Save or update a game in the database.
<DT><A HREF="TDBStandard.html#saveProfil(TPlayer)"><B>saveProfil(TPlayer)</B></A> - 
Method in class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>Save or update a player in the database.
<DT><A HREF="TNet.html#send(java.lang.String)"><B>send(String)</B></A> - 
Method in class <A HREF="TNet.html">TNet</A>
<DD>Send a message to the client
<DT><A HREF="TNetServerThread.html#sendHit(java.lang.String)"><B>sendHit(String)</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Send the hit to all the client
<DT><A HREF="TGame.html#setBoard(TBoard)"><B>setBoard(TBoard)</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TEntity.html#setCase(TCase)"><B>setCase(TCase)</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>&nbsp;
<DT><A HREF="TDrawable.html#setFocus(boolean)"><B>setFocus(boolean)</B></A> - 
Method in interface <A HREF="TDrawable.html">TDrawable</A>
<DD>interact with an object to select it
<DT><A HREF="TEntity.html#setFocus(boolean)"><B>setFocus(boolean)</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>select a piece
<DT><A HREF="THexagonBoard.html#setFocus(boolean)"><B>setFocus(boolean)</B></A> - 
Method in class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>Focus or unfocus all the board's cell.
<DT><A HREF="THexagonCase.html#setFocus(boolean)"><B>setFocus(boolean)</B></A> - 
Method in class <A HREF="THexagonCase.html">THexagonCase</A>
<DD>Advise the game that this cell is focused
<DT><A HREF="TPlayer.html#setFocus(boolean)"><B>setFocus(boolean)</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>receives the focus instruction
<DT><A HREF="TSet.html#setGame(TGame)"><B>setGame(TGame)</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>&nbsp;
<DT><A HREF="TCase.html#setGC(TGraphicContext)"><B>setGC(TGraphicContext)</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>&nbsp;
<DT><A HREF="TEntity.html#setGC(TGraphicContext)"><B>setGC(TGraphicContext)</B></A> - 
Method in class <A HREF="TEntity.html">TEntity</A>
<DD>&nbsp;
<DT><A HREF="TNetServerThread.html#setIdPl(int)"><B>setIdPl(int)</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>&nbsp;
<DT><A HREF="TCase.html#setPion(TPion)"><B>setPion(TPion)</B></A> - 
Method in class <A HREF="TCase.html">TCase</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#setPions(java.util.Vector)"><B>setPions(Vector)</B></A> - 
Method in class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="THit.html#setPlayer(TPlayer)"><B>setPlayer(TPlayer)</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#setPlayers(java.util.Vector)"><B>setPlayers(Vector)</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#setRules(TRules)"><B>setRules(TRules)</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TSet.html#setServerGame(TServerGame)"><B>setServerGame(TServerGame)</B></A> - 
Method in class <A HREF="TSet.html">TSet</A>
<DD>&nbsp;
<DT><A HREF="StandardDBFactory.html"><B>StandardDBFactory</B></A> - class <A HREF="StandardDBFactory.html">StandardDBFactory</A>.<DD>The StandardDBFactory implements the only abstract methods i nthe abstract 
 DBQueryFactory.<DT><A HREF="StandardDBFactory.html#StandardDBFactory()"><B>StandardDBFactory()</B></A> - 
Constructor for class <A HREF="StandardDBFactory.html">StandardDBFactory</A>
<DD>&nbsp;
<DT><A HREF="TNet.html#sync(boolean)"><B>sync(boolean)</B></A> - 
Method in class <A HREF="TNet.html">TNet</A>
<DD>Ask the client for a synchronisation
</DL>
<HR>
<A NAME="_T_"><!-- --></A><H2>
<B>T</B></H2>
<DL>
<DT><A HREF="DBQueryFactory.html#TABLE_CREATION"><B>TABLE_CREATION</B></A> - 
Static variable in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="DBQueryFactory.html#TABLE_PRINT"><B>TABLE_PRINT</B></A> - 
Static variable in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="TAction.html"><B>TAction</B></A> - class <A HREF="TAction.html">TAction</A>.<DD>the actions describes the behaviour of an entity<DT><A HREF="TAction.html#TAction()"><B>TAction()</B></A> - 
Constructor for class <A HREF="TAction.html">TAction</A>
<DD>&nbsp;
<DT><A HREF="TBoard.html"><B>TBoard</B></A> - class <A HREF="TBoard.html">TBoard</A>.<DD>The game's board<DT><A HREF="TBoard.html#TBoard()"><B>TBoard()</B></A> - 
Constructor for class <A HREF="TBoard.html">TBoard</A>
<DD>&nbsp;
<DT><A HREF="TBoard.html#TBoard(int)"><B>TBoard(int)</B></A> - 
Constructor for class <A HREF="TBoard.html">TBoard</A>
<DD>&nbsp;
<DT><A HREF="TCase.html"><B>TCase</B></A> - class <A HREF="TCase.html">TCase</A>.<DD>A cell : an abstraction of one board's part<DT><A HREF="TCase.html#TCase(int, TBoard)"><B>TCase(int, TBoard)</B></A> - 
Constructor for class <A HREF="TCase.html">TCase</A>
<DD>&nbsp;
<DT><A HREF="TClientGame.html"><B>TClientGame</B></A> - class <A HREF="TClientGame.html">TClientGame</A>.<DD>&nbsp;<DT><A HREF="TClientGame.html#TClientGame()"><B>TClientGame()</B></A> - 
Constructor for class <A HREF="TClientGame.html">TClientGame</A>
<DD>&nbsp;
<DT><A HREF="TDBStandard.html"><B>TDBStandard</B></A> - class <A HREF="TDBStandard.html">TDBStandard</A>.<DD>The TDBStandard extends TDB is the main actor of the game DB module.<DT><A HREF="TDBStandard.html#TDBStandard(java.lang.String, java.lang.String)"><B>TDBStandard(String, String)</B></A> - 
Constructor for class <A HREF="TDBStandard.html">TDBStandard</A>
<DD>The constructor create a PerformreLoader which instanciate a 
 new Performer.
<DT><A HREF="TDefaultHistory.html"><B>TDefaultHistory</B></A> - class <A HREF="TDefaultHistory.html">TDefaultHistory</A>.<DD>&nbsp;<DT><A HREF="TDefaultHistory.html#TDefaultHistory(java.util.Vector)"><B>TDefaultHistory(Vector)</B></A> - 
Constructor for class <A HREF="TDefaultHistory.html">TDefaultHistory</A>
<DD>&nbsp;
<DT><A HREF="TDisplayControler.html"><B>TDisplayControler</B></A> - class <A HREF="TDisplayControler.html">TDisplayControler</A>.<DD>create the frame, initialize the display<DT><A HREF="TDisplayControler.html#TDisplayControler(java.util.Vector)"><B>TDisplayControler(Vector)</B></A> - 
Constructor for class <A HREF="TDisplayControler.html">TDisplayControler</A>
<DD>&nbsp;
<DT><A HREF="TDistLocation.html"><B>TDistLocation</B></A> - class <A HREF="TDistLocation.html">TDistLocation</A>.<DD>this class describes a location that can reached cells with distance bounds<DT><A HREF="TDistLocation.html#TDistLocation(int, int, int)"><B>TDistLocation(int, int, int)</B></A> - 
Constructor for class <A HREF="TDistLocation.html">TDistLocation</A>
<DD>&nbsp;
<DT><A HREF="TDrawable.html"><B>TDrawable</B></A> - interface <A HREF="TDrawable.html">TDrawable</A>.<DD>this interface give an object the capacity to display itself in a frame<DT><A HREF="TEat.html"><B>TEat</B></A> - class <A HREF="TEat.html">TEat</A>.<DD>&nbsp;<DT><A HREF="TEat.html#TEat()"><B>TEat()</B></A> - 
Constructor for class <A HREF="TEat.html">TEat</A>
<DD>&nbsp;
<DT><A HREF="TEntity.html"><B>TEntity</B></A> - class <A HREF="TEntity.html">TEntity</A>.<DD>&nbsp;<DT><A HREF="TEntity.html#TEntity()"><B>TEntity()</B></A> - 
Constructor for class <A HREF="TEntity.html">TEntity</A>
<DD>&nbsp;
<DT><A HREF="TGame.html"><B>TGame</B></A> - class <A HREF="TGame.html">TGame</A>.<DD>the game owns all the informations about a game:
 board, players, rules ...<DT><A HREF="TGame.html#TGame()"><B>TGame()</B></A> - 
Constructor for class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#TGame(int)"><B>TGame(int)</B></A> - 
Constructor for class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#TGame(int, java.lang.String, int)"><B>TGame(int, String, int)</B></A> - 
Constructor for class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TGraphicContext.html"><B>TGraphicContext</B></A> - class <A HREF="TGraphicContext.html">TGraphicContext</A>.<DD>the graphic context determines the way of an object to display<DT><A HREF="TGraphicContext.html#TGraphicContext(int, int, java.awt.Color)"><B>TGraphicContext(int, int, Color)</B></A> - 
Constructor for class <A HREF="TGraphicContext.html">TGraphicContext</A>
<DD>&nbsp;
<DT><A HREF="THexagonBoard.html"><B>THexagonBoard</B></A> - class <A HREF="THexagonBoard.html">THexagonBoard</A>.<DD>A Board with 3 sides and hexagonal cells<DT><A HREF="THexagonBoard.html#THexagonBoard(int)"><B>THexagonBoard(int)</B></A> - 
Constructor for class <A HREF="THexagonBoard.html">THexagonBoard</A>
<DD>&nbsp;
<DT><A HREF="THexagonCase.html"><B>THexagonCase</B></A> - class <A HREF="THexagonCase.html">THexagonCase</A>.<DD>An original cell with 6 sides<DT><A HREF="THexagonCase.html#THexagonCase(int, TBoard)"><B>THexagonCase(int, TBoard)</B></A> - 
Constructor for class <A HREF="THexagonCase.html">THexagonCase</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensFactory.html"><B>THexagonQueensFactory</B></A> - class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>.<DD>&nbsp;<DT><A HREF="THexagonQueensFactory.html#THexagonQueensFactory(java.util.Vector)"><B>THexagonQueensFactory(Vector)</B></A> - 
Constructor for class <A HREF="THexagonQueensFactory.html">THexagonQueensFactory</A>
<DD>&nbsp;
<DT><A HREF="THexagonQueensRules.html"><B>THexagonQueensRules</B></A> - class <A HREF="THexagonQueensRules.html">THexagonQueensRules</A>.<DD>This is quite the same thing than classical queens, but here the board has
 hexagonals cells.<DT><A HREF="THexagonQueensRules.html#THexagonQueensRules(java.util.Vector)"><B>THexagonQueensRules(Vector)</B></A> - 
Constructor for class <A HREF="THexagonQueensRules.html">THexagonQueensRules</A>
<DD>&nbsp;
<DT><A HREF="THistory.html"><B>THistory</B></A> - class <A HREF="THistory.html">THistory</A>.<DD>&nbsp;<DT><A HREF="THistory.html#THistory()"><B>THistory()</B></A> - 
Constructor for class <A HREF="THistory.html">THistory</A>
<DD>&nbsp;
<DT><A HREF="THit.html"><B>THit</B></A> - class <A HREF="THit.html">THit</A>.<DD>&nbsp;<DT><A HREF="THit.html#THit(TPlayer)"><B>THit(TPlayer)</B></A> - 
Constructor for class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="THit.html#THit(TPlayer, java.lang.String, TBoard)"><B>THit(TPlayer, String, TBoard)</B></A> - 
Constructor for class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TLocation.html"><B>TLocation</B></A> - class <A HREF="TLocation.html">TLocation</A>.<DD>A location determines a position from a cell
 the board is able to recognnize a cell from a location and an other cell<DT><A HREF="TLocation.html#TLocation(int, int)"><B>TLocation(int, int)</B></A> - 
Constructor for class <A HREF="TLocation.html">TLocation</A>
<DD>&nbsp;
<DT><A HREF="TNet.html"><B>TNet</B></A> - class <A HREF="TNet.html">TNet</A>.<DD>&nbsp;<DT><A HREF="TNet.html#TNet(int, java.net.Socket)"><B>TNet(int, Socket)</B></A> - 
Constructor for class <A HREF="TNet.html">TNet</A>
<DD>Constructor specifying communication port
<DT><A HREF="TNetServer.html"><B>TNetServer</B></A> - class <A HREF="TNetServer.html">TNetServer</A>.<DD>communication modul for the server<DT><A HREF="TNetServer.html#TNetServer(TDB, int)"><B>TNetServer(TDB, int)</B></A> - 
Constructor for class <A HREF="TNetServer.html">TNetServer</A>
<DD>Constructor for TNetServer
<DT><A HREF="TNetServerThread.html"><B>TNetServerThread</B></A> - class <A HREF="TNetServerThread.html">TNetServerThread</A>.<DD>Class that implements the protocol<DT><A HREF="TNetServerThread.html#TNetServerThread(int, java.net.Socket, int, TNetServer, TNetThread)"><B>TNetServerThread(int, Socket, int, TNetServer, TNetThread)</B></A> - 
Constructor for class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Constructor
<DT><A HREF="TNetThread.html"><B>TNetThread</B></A> - class <A HREF="TNetThread.html">TNetThread</A>.<DD>&nbsp;<DT><A HREF="TNetThread.html#TNetThread(int, java.net.Socket, int, TNetServer)"><B>TNetThread(int, Socket, int, TNetServer)</B></A> - 
Constructor for class <A HREF="TNetThread.html">TNetThread</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#toNet()"><B>toNet()</B></A> - 
Method in class <A HREF="TGame.html">TGame</A>
<DD>returns a string describing the game and its rules
<DT><A HREF="DBQuery.html#toString()"><B>toString()</B></A> - 
Method in interface <A HREF="DBQuery.html">DBQuery</A>
<DD>The toString method format the query in a description language.
<DT><A HREF="THit.html#toString()"><B>toString()</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TPion.html"><B>TPion</B></A> - class <A HREF="TPion.html">TPion</A>.<DD>the default piece<DT><A HREF="TPion.html#TPion(TPlayer, TCase)"><B>TPion(TPlayer, TCase)</B></A> - 
Constructor for class <A HREF="TPion.html">TPion</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html"><B>TPlayer</B></A> - class <A HREF="TPlayer.html">TPlayer</A>.<DD>the player class<DT><A HREF="TPlayer.html#TPlayer(java.awt.Color, int)"><B>TPlayer(Color, int)</B></A> - 
Constructor for class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#TPlayer(java.util.Vector)"><B>TPlayer(Vector)</B></A> - 
Constructor for class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TPlayer.html#TPlayer(java.util.Vector, int, java.lang.String, int, int)"><B>TPlayer(Vector, int, String, int, int)</B></A> - 
Constructor for class <A HREF="TPlayer.html">TPlayer</A>
<DD>&nbsp;
<DT><A HREF="TRules.html"><B>TRules</B></A> - class <A HREF="TRules.html">TRules</A>.<DD>The rules are located only in the server.<DT><A HREF="TRules.html#TRules()"><B>TRules()</B></A> - 
Constructor for class <A HREF="TRules.html">TRules</A>
<DD>&nbsp;
<DT><A HREF="TSet.html"><B>TSet</B></A> - class <A HREF="TSet.html">TSet</A>.<DD>&nbsp;<DT><A HREF="TSet.html#TSet(TGame)"><B>TSet(TGame)</B></A> - 
Constructor for class <A HREF="TSet.html">TSet</A>
<DD>Constructor with only the Game
<DT><A HREF="TSet.html#TSet(java.util.Vector)"><B>TSet(Vector)</B></A> - 
Constructor for class <A HREF="TSet.html">TSet</A>
<DD>Constructor players
<DT><A HREF="TSet.html#TSet(java.util.Vector, TGame)"><B>TSet(Vector, TGame)</B></A> - 
Constructor for class <A HREF="TSet.html">TSet</A>
<DD>Constructor with the pre-created list of player 
 and the Game associated
<DT><A HREF="DBQueryFactory.html#TUPLE_FINDER"><B>TUPLE_FINDER</B></A> - 
Static variable in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="DBQueryFactory.html#TUPLE_INSERTION"><B>TUPLE_INSERTION</B></A> - 
Static variable in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
<DT><A HREF="DBQueryFactory.html#TUPLE_UPDATE"><B>TUPLE_UPDATE</B></A> - 
Static variable in class <A HREF="DBQueryFactory.html">DBQueryFactory</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_U_"><!-- --></A><H2>
<B>U</B></H2>
<DL>
<DT><A HREF="THit.html#unFocusCases()"><B>unFocusCases()</B></A> - 
Method in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_V_"><!-- --></A><H2>
<B>V</B></H2>
<DL>
<DT><A HREF="TNetServerThread.html#visualize(java.util.Vector, java.util.Vector)"><B>visualize(Vector, Vector)</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Send information about the game in progress
<DT><A HREF="TPion.html#vSize"><B>vSize</B></A> - 
Static variable in class <A HREF="TPion.html">TPion</A>
<DD>the pion is represented by an ellipse of vertical size
</DL>
<HR>
<A NAME="_W_"><!-- --></A><H2>
<B>W</B></H2>
<DL>
<DT><A HREF="TNetServerThread.html#win()"><B>win()</B></A> - 
Method in class <A HREF="TNetServerThread.html">TNetServerThread</A>
<DD>Inform the client that he win the game
</DL>
<HR>
<A NAME="___"><!-- --></A><H2>
<B>_</B></H2>
<DL>
<DT><A HREF="TCase.html#_board"><B>_board</B></A> - 
Variable in class <A HREF="TCase.html">TCase</A>
<DD>A cell knows the board that nests it
<DT><A HREF="TGame.html#_board"><B>_board</B></A> - 
Variable in class <A HREF="TGame.html">TGame</A>
<DD>the board
<DT><A HREF="TEntity.html#_case"><B>_case</B></A> - 
Variable in class <A HREF="TEntity.html">TEntity</A>
<DD>the cell where the pion is located
<DT><A HREF="TBoard.html#_cases"><B>_cases</B></A> - 
Variable in class <A HREF="TBoard.html">TBoard</A>
<DD>a board is a list of cells, to allow many representations
<DT><A HREF="THit.html#_cases"><B>_cases</B></A> - 
Variable in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TAction.html#_conditions"><B>_conditions</B></A> - 
Variable in class <A HREF="TAction.html">TAction</A>
<DD>an action have conditions
<DT><A HREF="TLocation.html#_dir"><B>_dir</B></A> - 
Variable in class <A HREF="TLocation.html">TLocation</A>
<DD>the direction
<DT><A HREF="TLocation.html#_dist"><B>_dist</B></A> - 
Variable in class <A HREF="TLocation.html">TLocation</A>
<DD>the number of cell between the cell and the target
<DT><A HREF="TCase.html#_focused"><B>_focused</B></A> - 
Variable in class <A HREF="TCase.html">TCase</A>
<DD>to know if the cell is focused (selected)
<DT><A HREF="TCase.html#_gc"><B>_gc</B></A> - 
Variable in class <A HREF="TCase.html">TCase</A>
<DD>The graphicContext creates the caracteristics of the display
<DT><A HREF="TEntity.html#_gc"><B>_gc</B></A> - 
Variable in class <A HREF="TEntity.html">TEntity</A>
<DD>the graphical environment
<DT><A HREF="THistory.html#_hits"><B>_hits</B></A> - 
Variable in class <A HREF="THistory.html">THistory</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#_id"><B>_id</B></A> - 
Variable in class <A HREF="TGame.html">TGame</A>
<DD>the id of the game
<DT><A HREF="TNet.html#_id"><B>_id</B></A> - 
Variable in class <A HREF="TNet.html">TNet</A>
<DD>Id of the module
<DT><A HREF="TGame.html#_idPlayer"><B>_idPlayer</B></A> - 
Variable in class <A HREF="TGame.html">TGame</A>
<DD>&nbsp;
<DT><A HREF="TCase.html#_idx"><B>_idx</B></A> - 
Variable in class <A HREF="TCase.html">TCase</A>
<DD>index (position) of the cells in the board
<DT><A HREF="TRules.html#_infos"><B>_infos</B></A> - 
Variable in class <A HREF="TRules.html">TRules</A>
<DD>Informations about the rules (width of the board, number of players...)
<DT><A HREF="TAction.html#_locations"><B>_locations</B></A> - 
Variable in class <A HREF="TAction.html">TAction</A>
<DD>the cells that will be pointed
<DT><A HREF="TBoard.html#_nbCases"><B>_nbCases</B></A> - 
Variable in class <A HREF="TBoard.html">TBoard</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#_nbPlayers"><B>_nbPlayers</B></A> - 
Variable in class <A HREF="TGame.html">TGame</A>
<DD>the number of players
<DT><A HREF="THit.html#_nbSelec"><B>_nbSelec</B></A> - 
Variable in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TCase.html#_pion"><B>_pion</B></A> - 
Variable in class <A HREF="TCase.html">TCase</A>
<DD>A cell can be attached to zero or one instance of TPion
<DT><A HREF="TEntity.html#_player"><B>_player</B></A> - 
Variable in class <A HREF="TEntity.html">TEntity</A>
<DD>the player that owns this entity
<DT><A HREF="THit.html#_player"><B>_player</B></A> - 
Variable in class <A HREF="THit.html">THit</A>
<DD>&nbsp;
<DT><A HREF="TGame.html#_players"><B>_players</B></A> - 
Variable in class <A HREF="TGame.html">TGame</A>
<DD>the list of players
<DT><A HREF="TNet.html#_port"><B>_port</B></A> - 
Variable in class <A HREF="TNet.html">TNet</A>
<DD>The communication port
<DT><A HREF="TGame.html#_rf"><B>_rf</B></A> - 
Variable in class <A HREF="TGame.html">TGame</A>
<DD>the rules factory that will create the game
<DT><A HREF="TGame.html#_rules"><B>_rules</B></A> - 
Variable in class <A HREF="TGame.html">TGame</A>
<DD>the rules
<DT><A HREF="TNet.html#_socket"><B>_socket</B></A> - 
Variable in class <A HREF="TNet.html">TNet</A>
<DD>The communication Socket
<DT><A HREF="JDBCPerformer.html#_stmt"><B>_stmt</B></A> - 
Variable in class <A HREF="JDBCPerformer.html">JDBCPerformer</A>
<DD>&nbsp;
</DL>
<HR>
<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_H_">H</A> <A HREF="#_I_">I</A> <A HREF="#_J_">J</A> <A HREF="#_L_">L</A> <A HREF="#_M_">M</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_P_">P</A> <A HREF="#_R_">R</A> <A HREF="#_S_">S</A> <A HREF="#_T_">T</A> <A HREF="#_U_">U</A> <A HREF="#_V_">V</A> <A HREF="#_W_">W</A> <A HREF="#___">_</A> 
<!-- ========== START OF NAVBAR ========== -->
<A NAME="navbar_bottom"><!-- --></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="index.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" TARGET="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;
<SCRIPT>
  <!--
  if(window==top) {
    document.writeln('<A HREF="allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
<A HREF="allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</NOSCRIPT>
</FONT></TD>
</TR>
</TABLE>
<!-- =========== END OF NAVBAR =========== -->

<HR>

</BODY>
</HTML>
